/* 
 * RSMeans Consumer REST API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Gordian.DataApi.Model
{
    /// <summary>
    /// Defines building parameters
    /// </summary>
    [DataContract]
    public partial class BuildingParameters :  IEquatable<BuildingParameters>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuildingParameters" /> class.
        /// </summary>
        /// <param name="area">The area..</param>
        /// <param name="perimeter">The perimeter..</param>
        /// <param name="stories">The stories..</param>
        /// <param name="storyHeight">The story height..</param>
        /// <param name="includeBasement">Is basement included.</param>
        public BuildingParameters(RangedParameterDecimal area = default(RangedParameterDecimal), RangedParameterDecimal perimeter = default(RangedParameterDecimal), RangedParameterDecimal stories = default(RangedParameterDecimal), RangedParameterDecimal storyHeight = default(RangedParameterDecimal), ParameterBoolean includeBasement = default(ParameterBoolean))
        {
            this.Area = area;
            this.Perimeter = perimeter;
            this.Stories = stories;
            this.StoryHeight = storyHeight;
            this.IncludeBasement = includeBasement;
        }
        
        /// <summary>
        /// The area.
        /// </summary>
        /// <value>The area.</value>
        [DataMember(Name="area", EmitDefaultValue=false)]
        public RangedParameterDecimal Area { get; set; }

        /// <summary>
        /// The perimeter.
        /// </summary>
        /// <value>The perimeter.</value>
        [DataMember(Name="perimeter", EmitDefaultValue=false)]
        public RangedParameterDecimal Perimeter { get; set; }

        /// <summary>
        /// The stories.
        /// </summary>
        /// <value>The stories.</value>
        [DataMember(Name="stories", EmitDefaultValue=false)]
        public RangedParameterDecimal Stories { get; set; }

        /// <summary>
        /// The story height.
        /// </summary>
        /// <value>The story height.</value>
        [DataMember(Name="storyHeight", EmitDefaultValue=false)]
        public RangedParameterDecimal StoryHeight { get; set; }

        /// <summary>
        /// Is basement included
        /// </summary>
        /// <value>Is basement included</value>
        [DataMember(Name="includeBasement", EmitDefaultValue=false)]
        public ParameterBoolean IncludeBasement { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BuildingParameters {\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  Perimeter: ").Append(Perimeter).Append("\n");
            sb.Append("  Stories: ").Append(Stories).Append("\n");
            sb.Append("  StoryHeight: ").Append(StoryHeight).Append("\n");
            sb.Append("  IncludeBasement: ").Append(IncludeBasement).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BuildingParameters);
        }

        /// <summary>
        /// Returns true if BuildingParameters instances are equal
        /// </summary>
        /// <param name="input">Instance of BuildingParameters to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BuildingParameters input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Area == input.Area ||
                    (this.Area != null &&
                    this.Area.Equals(input.Area))
                ) && 
                (
                    this.Perimeter == input.Perimeter ||
                    (this.Perimeter != null &&
                    this.Perimeter.Equals(input.Perimeter))
                ) && 
                (
                    this.Stories == input.Stories ||
                    (this.Stories != null &&
                    this.Stories.Equals(input.Stories))
                ) && 
                (
                    this.StoryHeight == input.StoryHeight ||
                    (this.StoryHeight != null &&
                    this.StoryHeight.Equals(input.StoryHeight))
                ) && 
                (
                    this.IncludeBasement == input.IncludeBasement ||
                    (this.IncludeBasement != null &&
                    this.IncludeBasement.Equals(input.IncludeBasement))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Area != null)
                    hashCode = hashCode * 59 + this.Area.GetHashCode();
                if (this.Perimeter != null)
                    hashCode = hashCode * 59 + this.Perimeter.GetHashCode();
                if (this.Stories != null)
                    hashCode = hashCode * 59 + this.Stories.GetHashCode();
                if (this.StoryHeight != null)
                    hashCode = hashCode * 59 + this.StoryHeight.GetHashCode();
                if (this.IncludeBasement != null)
                    hashCode = hashCode * 59 + this.IncludeBasement.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
