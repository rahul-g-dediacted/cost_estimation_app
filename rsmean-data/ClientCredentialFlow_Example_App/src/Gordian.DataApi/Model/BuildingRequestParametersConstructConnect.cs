/* 
 * RSMeans Consumer REST API V1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using Newtonsoft.Json;

namespace Gordian.DataApi.Model
{
    /// <summary>
    /// Defines parameters specified by a client
    /// </summary>
    [DataContract]
    public partial class BuildingRequestParametersConstructConnect :  IEquatable<BuildingRequestParametersConstructConnect>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BuildingRequestParametersConstructConnect" /> class.
        /// </summary>
        /// <param name="totalDollarAmount">The total dollar amount.</param>
        /// <param name="area">area.</param>
        /// <param name="includeBasement">includeBasement.</param>
        /// <param name="contructionStartDate">contructionStartDate.</param>
        public BuildingRequestParametersConstructConnect(double? totalDollarAmount = default(double?), double? area = default(double?), bool? includeBasement = default(bool?), DateTime? contructionStartDate = default(DateTime?))
        {
            this.TotalDollarAmount = totalDollarAmount;
            this.Area = area;
            this.IncludeBasement = includeBasement;
            this.ContructionStartDate = contructionStartDate;
        }
        
        /// <summary>
        /// The total dollar amount
        /// </summary>
        /// <value>The total dollar amount</value>
        [DataMember(Name="totalDollarAmount", EmitDefaultValue=false)]
        public double? TotalDollarAmount { get; set; }

        /// <summary>
        /// Gets or Sets Area
        /// </summary>
        [DataMember(Name="area", EmitDefaultValue=false)]
        public double? Area { get; set; }

        /// <summary>
        /// Gets or Sets IncludeBasement
        /// </summary>
        [DataMember(Name="includeBasement", EmitDefaultValue=false)]
        public bool? IncludeBasement { get; set; }

        /// <summary>
        /// Gets or Sets ContructionStartDate
        /// </summary>
        [DataMember(Name="contructionStartDate", EmitDefaultValue=false)]
        public DateTime? ContructionStartDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BuildingRequestParametersConstructConnect {\n");
            sb.Append("  TotalDollarAmount: ").Append(TotalDollarAmount).Append("\n");
            sb.Append("  Area: ").Append(Area).Append("\n");
            sb.Append("  IncludeBasement: ").Append(IncludeBasement).Append("\n");
            sb.Append("  ContructionStartDate: ").Append(ContructionStartDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BuildingRequestParametersConstructConnect);
        }

        /// <summary>
        /// Returns true if BuildingRequestParametersConstructConnect instances are equal
        /// </summary>
        /// <param name="input">Instance of BuildingRequestParametersConstructConnect to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BuildingRequestParametersConstructConnect input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.TotalDollarAmount == input.TotalDollarAmount ||
                    (this.TotalDollarAmount != null &&
                    this.TotalDollarAmount.Equals(input.TotalDollarAmount))
                ) && 
                (
                    this.Area == input.Area ||
                    (this.Area != null &&
                    this.Area.Equals(input.Area))
                ) && 
                (
                    this.IncludeBasement == input.IncludeBasement ||
                    (this.IncludeBasement != null &&
                    this.IncludeBasement.Equals(input.IncludeBasement))
                ) && 
                (
                    this.ContructionStartDate == input.ContructionStartDate ||
                    (this.ContructionStartDate != null &&
                    this.ContructionStartDate.Equals(input.ContructionStartDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TotalDollarAmount != null)
                    hashCode = hashCode * 59 + this.TotalDollarAmount.GetHashCode();
                if (this.Area != null)
                    hashCode = hashCode * 59 + this.Area.GetHashCode();
                if (this.IncludeBasement != null)
                    hashCode = hashCode * 59 + this.IncludeBasement.GetHashCode();
                if (this.ContructionStartDate != null)
                    hashCode = hashCode * 59 + this.ContructionStartDate.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
